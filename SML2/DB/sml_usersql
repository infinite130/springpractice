--회원
DROP TABLE TB_MEMBER;
CREATE TABLE TB_MEMBER (
    MEM_CODE NUMBER GENERATED AS IDENTITY (start with 1) PRIMARY KEY NOT NULL,
    MEM_ID VARCHAR2(255),
    MEM_PW VARCHAR2(255),
    MEM_NAME VARCHAR2(255),
    MEM_MAIL VARCHAR2(255),
    MEM_PHONE VARCHAR2(255),
    MEM_EMER_PHONE VARCHAR2(255),
    MEM_ADDR1 VARCHAR2(255),
    MEM_ADDR2 VARCHAR2(255),
    MEM_ADDR3 VARCHAR2(255),
    MEM_BIRTH DATE,
    MEM_JOIN_DATE DATE,
    MEM_QUIT_DATE DATE,
    MEM_STATUS NUMBER(1),
    MEM_TOTAL_POINT INT,
    MEM_ADMIN_CHECK INT    
);
SELECT * FROM TB_MEMBER;
UPDATE TB_MEMBER
SET MEM_ADMIN_CHECK = 1
WHERE MEM_CODE = 1;

SELECT MEM_CODE, MEM_ID, MEM_PW, MEM_NAME, MEM_STATUS FROM TB_MEMBER;

-- 포인트 
CREATE TABLE TB_POINT(
    POINT_CODE NUMBER GENERATED AS IDENTITY (start with 1) PRIMARY KEY NOT NULL,
    POINT_PRICE NUMBER,
    POINT_DATE DATE,
    POINT_COMMENT VARCHAR2(255),   
    POINT_STATUS NUMBER(1),
    MEM_CODE  NUMBER NOT NULL   
    
);

-- 포인트 히스토리
DROP TABLE POINT_HISTORY;
CREATE TABLE POINT_HISTORY (
    POINT_CODE INT PRIMARY KEY NOT NULL,    
    POINT_CATEGORY NUMBER(1),
    POINT_PRICE INT,
    POINT_DATE DATE,
    POINT_COMMENT VARCHAR2(255),
    MEM_CODE INT NOT NULL,    
    FOREIGN KEY (MEM_CODE) REFERENCES TB_MEMBER(MEM_CODE)
);

-- 출석체크
CREATE TABLE MEMBER_CHECK (
    CHECK_CODE NUMBER GENERATED AS IDENTITY (start with 1) PRIMARY KEY NOT NULL,
    CHECK_DATE DATE,
    STATUS NUMBER(1),
    MEM_CODE INT NOT NULL,
    FOREIGN KEY (MEM_CODE) REFERENCES TB_MEMBER(MEM_CODE)
);

COMMIT;