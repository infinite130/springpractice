<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vam.mapper.AdminMapper">

    <insert id="bookEnroll">
        insert into vam_book(bookName, authorId, publeYear, publisher, cateCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents)
        values(#{bookName}, #{authorId}, #{publeYear}, #{publisher}, #{cateCode}, #{bookPrice}, #{bookStock}, #{bookDiscount}, #{bookIntro}, #{bookContents})
    </insert>
    
    
    
<!-- 상품 리스트 -->
  	<select id="goodsGetList" resultType="com.vam.model.BookVO">
  	
	  	<![CDATA[
		select * from(
		    select /*+INDEX_DESC(vam_book SYS_C007551)*/ rownum as rn, bookId, bookName,
		        (select authorName from vam_author where vam_book.authorId = vam_author.authorId) authorName,
		        (select cateName from vam_bcate where vam_book.cateCode = vam_bcate.cateCode) cateName,bookStock,regDate
		    from vam_book 
		    where 
		]]>    
		
		    <if test="keyword != null">
		    
			    bookName like '%' || #{keyword} || '%' and
			    
		    </if>
		     
		<![CDATA[    
		    rownum <= #{pageNum} * #{amount} 
		    )
		where rn > (#{pageNum} -1) * #{amount}		  	
  		]]>
  	
  	</select>
    
    
    <select id="goodsGetTotal" resultType="int">
        select count(*) from vam_book
    </select>
    
    <select id="goodsGetDetail" resultType="com.vam.model.BookVO">
        select bookId, bookName, (select authorName from vam_author where authorId = vam_book.authorId) authorName,
            authorId, publeYear, publisher, cateCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents,
            regDate, updateDate
        from vam_book where bookId = #{bookId}
    </select>
    
    <update id="goodsModify">
        update vam_book set bookName=#{bookName}, authorId=#{authorId}, publeYear=#{publeYear}, publisher=#{publisher},
            cateCode=#{cateCode}, bookPrice=#{bookPrice}, bookStock=#{bookStock}, bookDiscount=#{bookDiscount},
            bookIntro=#{bookIntro}, bookContents=#{bookContents}, updateDate=sysdate
        where bookId = #{bookId}
    </update>
    
    <delete id="goodsDelete">
        delete from vam_book where bookId = #{bookId}
    </delete>
    
    <select id="cateList" resultType="com.vam.model.CateVO">
        select * from vam_bcate order by catecode
    </select>
    
    <!-- 이미지 등록 -->
	<insert id="imageEnroll">
	
		insert into vam_image(bookId, fileName, uploadPath, uuid) values (#{bookId}, #{fileName}, #{uploadPath}, #{uuid})
	
	</insert>
	
	<!-- 지정 상품 이미지 전체 삭제 --> 
	<delete id="deleteImageAll">
	
		delete FROM vam_image where bookId = #{bookId}
	
	</delete>	
	
	<!-- 어제자 날자 이미지 리스트 -->
	<select id="checkFileList" resultType="com.vam.model.AttachImageVO">
	
		select * from vam_image where uploadpath = to_char(sysdate -1, 'yyyy\mm\dd')	
	
	</select>
	
	<!-- 지정 상품 이미지 정보 얻기 -->
	<select id="getAttachInfo" resultType="com.vam.model.AttachImageVO">
	
		select * from vam_image where bookId = #{bookId}
	
	</select>	

</mapper>


